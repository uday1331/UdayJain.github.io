{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./node_modules/@chakra-ui/core/dist/es/Stack/index.js"],"names":["Blog","title","path","excerpt","date","to","size","marginBottom","fontSize","fontWeight","blogsQuery","Blogs","blogs","data","allMdx","edges","map","node","frontmatter","spacing","blog","key","_ref","_direction","direction","_ref$isInline","isInline","_ref$isReversed","isReversed","children","align","justify","_ref$spacing","shouldWrapChildren","rest","_isReversed","endsWith","_isInline","startsWith","validChildrenArray","toArray","filter","child","index","_ref2","_ref3","isLastChild","length","spacingProps","d"],"mappings":"0PAaMA,EAA2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,KAAzB,OAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcC,GAAIH,GAChB,kBAAC,IAAD,CAASI,KAAK,KAAKC,aAAc,GAC9BN,IAGL,kBAAC,IAAD,CAAMO,SAAS,KAAKC,WAAW,SAC5BL,GAEH,kBAAC,IAAD,CAAMI,SAAS,KAAKC,WAAW,SAC5BN,KA2BMO,EAAa,YAqBXC,UA3Cc,SAAC,GAIxB,IACEC,EADF,EAHJC,KACEC,OAAUC,MAGQC,KAClB,qBAAGC,KAAQC,eAEb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKjB,MAAM,aACX,kBAAC,IAAD,CAAOkB,QAAS,GACbP,EAAMI,KAAI,SAACI,EAAMC,GAAP,OACT,kBAAC,IAAD,CAAWd,aAAc,GACvB,kBAACP,EAAD,eAAMqB,IAAKA,GAASD,Y,oCC3ChC,sIAwEe,IA3DH,SAAeE,GACzB,IAiBIC,EAjBAC,EAAYF,EAAKE,UACjBC,EAAgBH,EAAKI,SACrBA,OAA6B,IAAlBD,GAAmCA,EAC9CE,EAAkBL,EAAKM,WACvBA,OAAiC,IAApBD,GAAqCA,EAClDE,EAAWP,EAAKO,SAChBC,EAAQR,EAAKQ,MACbC,EAAUT,EAAKS,QACfC,EAAeV,EAAKH,QACpBA,OAA2B,IAAjBa,EAA0B,EAAIA,EACxCC,EAAqBX,EAAKW,mBAC1BC,EAAO,IAA8BZ,EAAM,CAAC,YAAa,WAAY,aAAc,WAAY,QAAS,UAAW,UAAW,uBAE9Ha,EAAcP,GAAcJ,GAAaA,EAAUY,SAAS,WAE5DC,EAAYX,GAAYF,GAAaA,EAAUc,WAAW,OAI1DD,IACFd,EAAa,OAGXY,IACFZ,EAAaG,EAAW,cAAgB,kBAGtCF,IACFD,EAAaC,GAGVa,GAAcF,GAAgBX,IACjCD,EAAa,UAGf,IAAIgB,EAAqB,WAASC,QAAQX,GAAUY,OAAO,kBAC3D,OAAO,YAAI,IAAM,IAAS,CACxBX,MAAOA,EACPC,QAASA,EACTP,UAAWD,GACVW,GAAOK,EAAmBvB,KAAI,SAAU0B,EAAOC,GAChD,IAAIC,EAAOC,EAEPC,EAAcP,EAAmBQ,SAAWJ,EAAQ,EACpDK,EAAeX,IAAaO,EAAQ,IAAUT,EAAc,KAAO,MAAQW,EAAc,KAAO3B,EAASyB,KAAUC,EAAQ,IAAUV,EAAc,KAAO,MAAQW,EAAc,KAAO3B,EAAS0B,GAEpM,OAAIZ,EACK,YAAI,IAAK,IAAS,CACvBgB,EAAG,gBACFD,EAAc,CACf3B,IAAK,qBAAuBsB,IAC1BD,GAGC,uBAAaA,EAAOM","file":"component---src-pages-blog-tsx-d449838ab1f623f46577.js","sourcesContent":["import React from \"react\";\n\nimport { SEO, Layout, InternalLink } from \"../components\";\nimport { Text, Box, Heading, Stack, PseudoBox } from \"@chakra-ui/core\";\nimport { graphql } from \"gatsby\";\n\ninterface BlogData {\n  title: string;\n  date: string;\n  path: string;\n  excerpt: string;\n}\n\nconst Blog: React.FC<BlogData> = ({ title, path, excerpt, date }) => (\n  <Box>\n    <InternalLink to={path}>\n      <Heading size=\"md\" marginBottom={1}>\n        {title}\n      </Heading>\n    </InternalLink>\n    <Text fontSize=\"xs\" fontWeight=\"light\">\n      {date}\n    </Text>\n    <Text fontSize=\"sm\" fontWeight=\"light\">\n      {excerpt}\n    </Text>\n  </Box>\n);\n\nconst Blogs: React.FC<any> = ({\n  data: {\n    allMdx: { edges }\n  }\n}) => {\n  const blogs = edges.map(\n    ({ node: { frontmatter } }: any) => frontmatter\n  ) as BlogData[];\n  return (\n    <Layout>\n      <SEO title=\"Projects\" />\n      <Stack spacing={3}>\n        {blogs.map((blog, key) => (\n          <PseudoBox marginBottom={4}>\n            <Blog key={key} {...blog} />\n          </PseudoBox>\n        ))}\n      </Stack>\n    </Layout>\n  );\n};\n\nexport const blogsQuery = graphql`\n  query {\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"/src/blogs/\" } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            excerpt\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blogs;\n","import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.string.ends-with\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Children, cloneElement, isValidElement } from \"react\";\nimport Flex from \"../Flex\";\nimport Box from \"../Box\"; // TODO: Reduce complexity by deprecating isInline and isReversed prop\n\nvar Stack = function Stack(_ref) {\n  var direction = _ref.direction,\n      _ref$isInline = _ref.isInline,\n      isInline = _ref$isInline === void 0 ? false : _ref$isInline,\n      _ref$isReversed = _ref.isReversed,\n      isReversed = _ref$isReversed === void 0 ? false : _ref$isReversed,\n      children = _ref.children,\n      align = _ref.align,\n      justify = _ref.justify,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? 2 : _ref$spacing,\n      shouldWrapChildren = _ref.shouldWrapChildren,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"direction\", \"isInline\", \"isReversed\", \"children\", \"align\", \"justify\", \"spacing\", \"shouldWrapChildren\"]);\n\n  var _isReversed = isReversed || direction && direction.endsWith(\"reverse\");\n\n  var _isInline = isInline || direction && direction.startsWith(\"row\");\n\n  var _direction;\n\n  if (_isInline) {\n    _direction = \"row\";\n  }\n\n  if (_isReversed) {\n    _direction = isInline ? \"row-reverse\" : \"column-reverse\";\n  }\n\n  if (direction) {\n    _direction = direction;\n  }\n\n  if (!_isInline && !_isReversed && !direction) {\n    _direction = \"column\";\n  }\n\n  var validChildrenArray = Children.toArray(children).filter(isValidElement);\n  return jsx(Flex, _extends({\n    align: align,\n    justify: justify,\n    direction: _direction\n  }, rest), validChildrenArray.map(function (child, index) {\n    var _ref2, _ref3;\n\n    var isLastChild = validChildrenArray.length === index + 1;\n    var spacingProps = _isInline ? (_ref2 = {}, _ref2[_isReversed ? \"ml\" : \"mr\"] = isLastChild ? null : spacing, _ref2) : (_ref3 = {}, _ref3[_isReversed ? \"mt\" : \"mb\"] = isLastChild ? null : spacing, _ref3);\n\n    if (shouldWrapChildren) {\n      return jsx(Box, _extends({\n        d: \"inline-block\"\n      }, spacingProps, {\n        key: \"stack-box-wrapper-\" + index\n      }), child);\n    }\n\n    return cloneElement(child, spacingProps);\n  }));\n};\n\nexport default Stack;"],"sourceRoot":""}